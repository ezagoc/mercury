nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
} else if(count > 3 & count < 7){
fmla1 <- as.formula(paste0(x, "~ neutral_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}
lm_se[[count2]] <- get(nam1, envir = globalenv())$se
count2 <- count2 + 1
}
means <- round(colMeans(aux_data, na.rm = T), 3)
sds <- round(colSds(as.matrix(aux_data), na.rm = T), 3)
maximums <- round(sapply(aux_data, max, na.rm = T), 1)
minimums <- round(sapply(aux_data, min, na.rm = T), 1)
range <- paste0("[", minimums, ",", maximums, "]")
table <- stargazer(lm_list_ols, # felm regressions
se = lm_se, # robust standard errors
label = paste0("tab:corr_covid"),
header = FALSE,
font.size = "tiny",
dep.var.caption = "",
omit = c('Constant'),
dep.var.labels.include = FALSE,
table.placement = "!htpb",
column.labels = rep(c('Q1', 'Q2', 'Q3'), 3),
covariate.labels = c("Positive COVID RT", 'Neutral COVID RT',
'Negative COVID RT'),
omit.stat=c("f", "ser", "adj.rsq"),
column.sep.width = "0pt",
add.lines = list(c("Outcome mean", means, means),
c("Outcome std. dev.", sds, sds),
c("Outcome range", range, range)),
title = paste0('COVID\_Q1, COVID\_Q2, COVID\_Q3'),
aux <- rep(c('d_COVID_Q1', 'd_COVID_Q2', 'd_COVID_Q3'), 2)
# Endline Results: use felm so that we can use stargazer
aux_data <- data[aux]
lm_list_ols <- list()
count <- 1
for (x in aux) {
if (count< 4){
fmla1 <- as.formula(paste0(x, "~ pos_b_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
} else if(count > 3 & count < 7){
fmla1 <- as.formula(paste0(x, "~ neutral_b_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
}
lm_list_ols[[count]] <- get(nam1, envir = globalenv())
count <- count + 1
}
lm_se <- list()
count2 <- 1
for (x in aux) {
if (count< 4){
fmla1 <- as.formula(paste0(x, "~ pos_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
} else if(count > 3 & count < 7){
fmla1 <- as.formula(paste0(x, "~ neutral_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}
lm_se[[count2]] <- get(nam1, envir = globalenv())$se
count2 <- count2 + 1
}
means <- round(colMeans(aux_data, na.rm = T), 3)
sds <- round(colSds(as.matrix(aux_data), na.rm = T), 3)
maximums <- round(sapply(aux_data, max, na.rm = T), 1)
minimums <- round(sapply(aux_data, min, na.rm = T), 1)
range <- paste0("[", minimums, ",", maximums, "]")
table <- stargazer(lm_list_ols, # felm regressions
se = lm_se, # robust standard errors
label = paste0("tab:corr_covid"),
header = FALSE,
font.size = "tiny",
dep.var.caption = "",
omit = c('Constant'),
dep.var.labels.include = FALSE,
table.placement = "!htpb",
column.labels = rep(c('Q1', 'Q2', 'Q3'), 3),
covariate.labels = c("Positive COVID RT", 'Neutral COVID RT',
'Negative COVID RT'),
omit.stat=c("f", "ser", "adj.rsq"),
column.sep.width = "0pt",
add.lines = list(c("Outcome mean", means, means),
c("Outcome std. dev.", sds, sds),
c("Outcome range", range, range)),
title = paste0('COVID Q1, COVID Q2, COVID Q3'),
type = "latex")
note.latex <- paste0("\\multicolumn{10}{l} {\\parbox[t]{16cm}{ \\textit{Notes:}
COVID Q1: To what extent do you agree with the following statement:
'COVID-19 is not a real disease and a serious health problem in Kenya.
It is a fake disease made up by powerful actors to fool and harm Kenyans.'
COVID Q2: To what extent do you agree with the following statement:
'COVID-19 vaccines have not been rigorously tested to ensure that they are safe.
Some safety protocols were circumvented to fast track the authorization of COVID-19 vaccine for use.'
COVID Q3: To what extent do you agree with the following statement:
'mRNA COVID-19 vaccines like Pfizer and Moderna change a person's DNA.'
The unit of observation is an influencer's follower. We report estimates from OLS regression.
Robust standard errors are in parentheses.
* denotes p$<$0.1, ** denotes p$<$0.05, and *** denotes p$<$0.01.}} \\\\")
table[grepl("Note", table)] <- note.latexprint(table)
table[grepl("Note", table)] <- note.latex
print(table)
cat(table, file = paste0("../../../results/04-analysis/correlations/covid.tex"))
aux <- rep(c('d_COVID_Q1', 'd_COVID_Q2', 'd_COVID_Q3'), 3)
# Endline Results: use felm so that we can use stargazer
aux_data <- data[aux]
lm_list_ols <- list()
count <- 1
for (x in aux) {
if (count< 4){
fmla1 <- as.formula(paste0(x, "~ pos_b_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
} else if(count > 3 & count < 7){
fmla1 <- as.formula(paste0(x, "~ neutral_b_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
}
lm_list_ols[[count]] <- get(nam1, envir = globalenv())
count <- count + 1
}
lm_se <- list()
count2 <- 1
for (x in aux) {
if (count< 4){
fmla1 <- as.formula(paste0(x, "~ pos_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
} else if(count > 3 & count < 7){
fmla1 <- as.formula(paste0(x, "~ neutral_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}
lm_se[[count2]] <- get(nam1, envir = globalenv())$se
count2 <- count2 + 1
}
means <- round(colMeans(aux_data, na.rm = T), 3)
sds <- round(colSds(as.matrix(aux_data), na.rm = T), 3)
maximums <- round(sapply(aux_data, max, na.rm = T), 1)
minimums <- round(sapply(aux_data, min, na.rm = T), 1)
range <- paste0("[", minimums, ",", maximums, "]")
table <- stargazer(lm_list_ols, # felm regressions
se = lm_se, # robust standard errors
label = paste0("tab:corr_covid"),
header = FALSE,
font.size = "tiny",
dep.var.caption = "",
omit = c('Constant'),
dep.var.labels.include = FALSE,
table.placement = "!htpb",
column.labels = rep(c('Q1', 'Q2', 'Q3'), 3),
covariate.labels = c("Positive COVID RT", 'Neutral COVID RT',
'Negative COVID RT'),
omit.stat=c("f", "ser", "adj.rsq"),
column.sep.width = "0pt",
add.lines = list(c("Outcome mean", means, means),
c("Outcome std. dev.", sds, sds),
c("Outcome range", range, range)),
title = paste0('COVID Q1, COVID Q2, COVID Q3'),
type = "latex")
note.latex <- paste0("\\multicolumn{10}{l} {\\parbox[t]{16cm}{ \\textit{Notes:}
COVID Q1: To what extent do you agree with the following statement:
'COVID-19 is not a real disease and a serious health problem in Kenya.
It is a fake disease made up by powerful actors to fool and harm Kenyans.'
COVID Q2: To what extent do you agree with the following statement:
'COVID-19 vaccines have not been rigorously tested to ensure that they are safe.
Some safety protocols were circumvented to fast track the authorization of COVID-19 vaccine for use.'
COVID Q3: To what extent do you agree with the following statement:
'mRNA COVID-19 vaccines like Pfizer and Moderna change a person's DNA.'
The unit of observation is an influencer's follower. We report estimates from OLS regression.
Robust standard errors are in parentheses.
* denotes p$<$0.1, ** denotes p$<$0.05, and *** denotes p$<$0.01.}} \\\\")
table[grepl("Note", table)] <- note.latex
print(table)
cat(table, file = paste0("../../../results/04-analysis/correlations/covid.tex"))
aux <- rep(c('COVID_Q6_1', 'COVID_Q6_2', 'COVID_Q6_3', 'COVID_Q6_4', 'COVID_Q6_5'), 3)
# Endline Results: use felm so that we can use stargazer
aux_data <- data[aux]
lm_list_ols <- list()
count <- 1
for (x in aux) {
if (count< 6){
fmla1 <- as.formula(paste0(x, "~ pos_b_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
} else if(count > 5 & count < 11){
fmla1 <- as.formula(paste0(x, "~ neutral_b_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
}
lm_list_ols[[count]] <- get(nam1, envir = globalenv())
count <- count + 1
}
lm_se <- list()
count2 <- 1
for (x in aux) {
if (count< 6){
fmla1 <- as.formula(paste0(x, "~ pos_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
} else if(count > 5 & count < 11){
fmla1 <- as.formula(paste0(x, "~ neutral_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}
lm_se[[count2]] <- get(nam1, envir = globalenv())$se
count2 <- count2 + 1
}
means <- round(colMeans(aux_data, na.rm = T), 3)
sds <- round(colSds(as.matrix(aux_data), na.rm = T), 3)
maximums <- round(sapply(aux_data, max, na.rm = T), 1)
minimums <- round(sapply(aux_data, min, na.rm = T), 1)
range <- paste0("[", minimums, ",", maximums, "]")
table <- stargazer(lm_list_ols, # felm regressions
se = lm_se, # robust standard errors
label = paste0("tab:corr_covid6"),
header = FALSE,
font.size = "tiny",
dep.var.caption = "",
omit = c('Constant'),
dep.var.labels.include = FALSE,
table.placement = "!htpb",
column.labels = rep(c('Not at all', 'A little bit',
'Somewhat', 'Mostly', 'Completely'), 3),
covariate.labels = c("Positive COVID RT", 'Neutral COVID RT',
'Negative COVID RT'),
omit.stat=c("f", "ser", "adj.rsq"),
column.sep.width = "0pt",
add.lines = list(c("Outcome mean", means, means),
c("Outcome std. dev.", sds, sds),
c("Outcome range", range, range)),
title = paste0('COVID Q6: To what extent do you believe that the COVID-19 vaccine currently available
at a location near you is safe and effective?'),
type = "latex")
note.latex <- paste0("\\multicolumn{16}{l} {\\parbox[t]{16cm}{ \\textit{Notes:}
The unit of observation is an influencer's follower. We report estimates from OLS regression.
Robust standard errors are in parentheses.
* denotes p$<$0.1, ** denotes p$<$0.05, and *** denotes p$<$0.01.}} \\\\")
table[grepl("Note", table)] <- note.latex
print(table)
cat(table, file = paste0("../../../results/04-analysis/correlations/covid6.tex"))
aux <- rep(c('d_COVID_Q1', 'd_COVID_Q2', 'd_COVID_Q3'), 3)
# Endline Results: use felm so that we can use stargazer
aux_data <- data[aux]
lm_list_ols <- list()
count <- 1
for (x in aux) {
if (count< 4){
fmla1 <- as.formula(paste0(x, "~ pos_b_no_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
} else if(count > 3 & count < 7){
fmla1 <- as.formula(paste0(x, "~ neutral_b_no_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_no_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
}
lm_list_ols[[count]] <- get(nam1, envir = globalenv())
count <- count + 1
}
lm_se <- list()
count2 <- 1
for (x in aux) {
if (count< 4){
fmla1 <- as.formula(paste0(x, "~ pos_b_no_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
} else if(count > 3 & count < 7){
fmla1 <- as.formula(paste0(x, "~ neutral_b_no_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_no_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}
lm_se[[count2]] <- get(nam1, envir = globalenv())$se
count2 <- count2 + 1
}
means <- round(colMeans(aux_data, na.rm = T), 3)
sds <- round(colSds(as.matrix(aux_data), na.rm = T), 3)
maximums <- round(sapply(aux_data, max, na.rm = T), 1)
minimums <- round(sapply(aux_data, min, na.rm = T), 1)
range <- paste0("[", minimums, ",", maximums, "]")
table <- stargazer(lm_list_ols, # felm regressions
se = lm_se, # robust standard errors
label = paste0("tab:corr_covid"),
header = FALSE,
font.size = "tiny",
dep.var.caption = "",
omit = c('Constant'),
dep.var.labels.include = FALSE,
table.placement = "!htpb",
column.labels = rep(c('Q1', 'Q2', 'Q3'), 3),
covariate.labels = c("Positive COVID Posts", 'Neutral COVID Posts',
'Negative COVID Posts'),
omit.stat=c("f", "ser", "adj.rsq"),
column.sep.width = "0pt",
add.lines = list(c("Outcome mean", means, means),
c("Outcome std. dev.", sds, sds),
c("Outcome range", range, range)),
title = paste0('COVID Q1, COVID Q2, COVID Q3'),
type = "latex")
note.latex <- paste0("\\multicolumn{10}{l} {\\parbox[t]{16cm}{ \\textit{Notes:}
COVID Q1: To what extent do you agree with the following statement:
'COVID-19 is not a real disease and a serious health problem in Kenya.
It is a fake disease made up by powerful actors to fool and harm Kenyans.'
COVID Q2: To what extent do you agree with the following statement:
'COVID-19 vaccines have not been rigorously tested to ensure that they are safe.
Some safety protocols were circumvented to fast track the authorization of COVID-19 vaccine for use.'
COVID Q3: To what extent do you agree with the following statement:
'mRNA COVID-19 vaccines like Pfizer and Moderna change a person's DNA.'
The unit of observation is an influencer's follower. We report estimates from OLS regression.
Robust standard errors are in parentheses.
* denotes p$<$0.1, ** denotes p$<$0.05, and *** denotes p$<$0.01.}} \\\\")
table[grepl("Note", table)] <- note.latex
print(table)
cat(table, file = paste0("../../../results/04-analysis/correlations/covidposts.tex"))
aux <- rep(c('COVID_Q6_1', 'COVID_Q6_2', 'COVID_Q6_3', 'COVID_Q6_4', 'COVID_Q6_5'), 3)
# Endline Results: use felm so that we can use stargazer
aux_data <- data[aux]
lm_list_ols <- list()
count <- 1
for (x in aux) {
if (count< 6){
fmla1 <- as.formula(paste0(x, "~ pos_b_no_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
} else if(count > 5 & count < 11){
fmla1 <- as.formula(paste0(x, "~ neutral_b_no_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_no_rt"))
nam1 <- paste("lm_", count, "_ols", sep = "")
assign(nam1, felm(fmla1, data = data))
}
lm_list_ols[[count]] <- get(nam1, envir = globalenv())
count <- count + 1
}
lm_se <- list()
count2 <- 1
for (x in aux) {
if (count< 6){
fmla1 <- as.formula(paste0(x, "~ pos_b_no_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
} else if(count > 5 & count < 11){
fmla1 <- as.formula(paste0(x, "~ neutral_b_no_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}else {
fmla1 <- as.formula(paste0(x, "~ neg_b_no_rt"))
nam1 <- paste("lm_", count2, "_se", sep = "")
assign(nam1, feols(fmla1, vcov = 'HC1', data = data))
}
lm_se[[count2]] <- get(nam1, envir = globalenv())$se
count2 <- count2 + 1
}
means <- round(colMeans(aux_data, na.rm = T), 3)
sds <- round(colSds(as.matrix(aux_data), na.rm = T), 3)
maximums <- round(sapply(aux_data, max, na.rm = T), 1)
minimums <- round(sapply(aux_data, min, na.rm = T), 1)
range <- paste0("[", minimums, ",", maximums, "]")
table <- stargazer(lm_list_ols, # felm regressions
se = lm_se, # robust standard errors
label = paste0("tab:corr_covid6posts"),
header = FALSE,
font.size = "tiny",
dep.var.caption = "",
omit = c('Constant'),
dep.var.labels.include = FALSE,
table.placement = "!htpb",
column.labels = rep(c('Not at all', 'A little bit',
'Somewhat', 'Mostly', 'Completely'), 3),
covariate.labels = c("Positive COVID Posts", 'Neutral COVID Posts',
'Negative COVID Posts'),
omit.stat=c("f", "ser", "adj.rsq"),
column.sep.width = "0pt",
add.lines = list(c("Outcome mean", means, means),
c("Outcome std. dev.", sds, sds),
c("Outcome range", range, range)),
title = paste0('COVID Q6: To what extent do you believe that the COVID-19 vaccine currently available
at a location near you is safe and effective?'),
type = "latex")
note.latex <- paste0("\\multicolumn{16}{l} {\\parbox[t]{16cm}{ \\textit{Notes:}
The unit of observation is an influencer's follower. We report estimates from OLS regression.
Robust standard errors are in parentheses.
* denotes p$<$0.1, ** denotes p$<$0.05, and *** denotes p$<$0.01.}} \\\\")
table[grepl("Note", table)] <- note.latex
print(table)
cat(table, file = paste0("../../../results/04-analysis/correlations/covid6posts.tex"))
rm(list = ls())
library('fastDummies')
library("purrr")
library(lfe)
library(fixest)
library(tidyverse)
library(arrow)
survey <- read_parquet( '../../../data/04-analysis/joint/correlations/pooled_survey.parquet')
s_corr <- survey |> select(username, batch, country, misinfor_1a:COVID_Q7)
s_corr <- s_corr |> rename(batch_id = batch, pais = country) |>
mutate(batch_id = case_when(batch_id == 0 ~ 'p', batch_id == 1 ~ 'b1',
batch_id == 2 ~ 'b2'))
df_ke <- read_parquet(paste0('../../../data/04-analysis/KE/', 'stage1_2',
'/final_data_b1b2p_sent_bert.parquet'))
df_sa <- read_parquet(paste0('../../../data/04-analysis/SA/', 'stage1_2',
'/final_data_b1b2p_sent_bert.parquet'))
sent <- rbind(df_ke, df_sa) |> select(username, batch_id, pais,
pos_b_rt:n_posts_no_rt_vax)
# Read normal
df_ke <- read_parquet(paste0('../../../data/04-analysis/KE/', 'stage1_2',
'/final_data_b1b2p.parquet'))
df_sa <- read_parquet(paste0('../../../data/04-analysis/SA/', 'stage1_2',
'/final_data_b1b2p.parquet'))
ver <- rbind(df_ke, df_sa) |> select(username, batch_id, pais,
total_shares_rt:n_posts, fake_rt,
fake_no_rt)
# Final
# Create dummies:
s_corr <- dummy_cols(s_corr, select_columns = c('csb_2', 'verify_1', 'COVID_Q6',
'COVID_Q7'))
# Create right answers:
right_answers_ver_2 <- tibble(
answer = c('1', '2', '3', '4', '5', '6', '7','8'),
correct = c('wrong', 'wrong', 'correct', 'correct', 'correct',
'wrong', 'wrong', 'wrong')
)
right_answers_ver_3 <- tibble(
answer = c('1', '2', '3', '4', '5', '6', '7', '8', '9'),
correct = c('correct', 'wrong', 'correct', 'wrong', 'wrong',
'correct', 'correct', 'wrong', 'wrong')
)
right_answers_mis_3 <- tibble(
answer = c('1', '2', '3','4', '5', '6', '7'),
correct = c('wrong', 'correct','wrong', 'correct', 'wrong', 'correct', 'wrong')
)
#### count number of rights
num_right_v_2 <- s_corr %>%
mutate(verify_2 = as.character(verify_2),
verify_2 = strsplit(verify_2, "", fixed = TRUE)) |>
unnest(verify_2) %>% left_join(right_answers_ver_2, by = c('verify_2' = 'answer')) %>%
group_by(username, pais, batch_id) %>%
summarise(num_right_ver2 = sum(correct == 'correct'),
num_wrong_ver2 = sum(correct == 'wrong'))
num_right_v_3 <- s_corr %>%
mutate(verify_3 = as.character(verify_3),
verify_3 = strsplit(verify_3, "", fixed = TRUE)) |>
unnest(verify_3) %>% left_join(right_answers_ver_3, by = c('verify_3' = 'answer')) %>%
group_by(username, pais, batch_id) %>%
summarise(num_right_ver3 = sum(correct == 'correct'),
num_wrong_ver3 = sum(correct == 'wrong'))
num_right_m_3 <- s_corr %>%
mutate(misinfor_3 = as.character(misinfor_3),
misinfor_3 = strsplit(misinfor_3, "", fixed = TRUE)) |>
unnest(misinfor_3) %>% left_join(right_answers_mis_3, by = c('misinfor_3' = 'answer')) %>%
group_by(username, pais, batch_id) %>%
summarise(num_right_mis3 = sum(correct == 'correct'),
num_wrong_mis3 = sum(correct == 'wrong'))
#### merge data
s_corr <- s_corr %>% left_join(num_right_v_3, by = c('username', 'pais', 'batch_id')) |>
left_join(num_right_v_2, by = c('username', 'pais', 'batch_id')) |>
left_join(num_right_m_3, by = c('username', 'pais', 'batch_id'))
s_corr_disc <- s_corr |> select(username, pais, batch_id,
Discernment_1_1:Conspiracy_1_3,
COVID_Q3:COVID_Q1) |>
mutate(across(c(Discernment_1_1, Discernment_1_2, COVID_Q3:COVID_Q1,
Conspiracy_1_1:Conspiracy_1_3),
~ifelse(.x == 1, 1, 0)),
across(c(Discernment_1_3, Discernment_1_4), ~ifelse(.x == 5, 1, 0)))
colnames(s_corr_disc)[4:13] <- paste0('d_', colnames(s_corr_disc)[4:13])
s_corr <- s_corr %>% left_join(s_corr_disc, by = c('username', 'batch_id', 'pais'))
s_corr <- s_corr |> mutate(D_ver2 = num_right_ver2/3 - num_wrong_ver2/2,
D_ver3 = num_right_ver3/4 - num_wrong_ver3/2,
D_mis3 = num_right_mis3/4 - num_wrong_mis3/2)
s_corr <-s_corr |> left_join(ver, by = c('username', 'pais', 'batch_id')) |>
left_join(sent, by = c('username', 'pais', 'batch_id'))
View(s_corr)
