df1 <- hydrate_tweets('1609488636738957312', bearer_token = bearer)
df2 <- hydrate_tweets('1608908347457277952', bearer_token = bearer)
View(df2)
View(df1)
asinh(0)
rm(list = ls())
library(tidyverse)
library(fuzzyjoin)
library(tidyr)
## Set WD
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# We are going to build a bridge that connects the observations from
# staff list data with the salary_scale data for 1958 1958/scales_docs/salary_scales_1958_1961_final.xlsx
cds <- readxl::read_excel('../../1-rawdata/Staff lists/1958/scales_docs/salary_scales_1958_1961_final_extrapol.xlsx')
staff <- arrow::read_parquet('../../1-rawdata/Staff lists/staff_list_cluster_123456_final.parquet')
staff <- staff |> filter(year %in% c(1963:1965, 1968, 1972))
st <- staff |> select(id, name, job_title, salary, salary_basic,
salary_inducement, job_band, job_band_merge, year)
st_sal <- st |> filter(is.na(salary) == F)
View(st)
st_j <- st |> filter(is.na(job_title) == F) |> distinct(job_title) |>
mutate(job_title_aux = str_squish(job_title))
View(st_j)
st_j <- st_j |> mutate(job_title_aux = gsub("\\([^()]*\\)", "", job_title_aux),
job_title_aux = gsub("\\([^()]*\\)", "", job_title_aux),
job_title_aux = gsub("\\([^()]*\\)", "", job_title_aux),
job_title_aux = gsub("\\[.*?\\]", "", job_title_aux),
job_title_aux = gsub("\\[.*?\\]", "", job_title_aux),
job_title_aux = gsub("\\[.*?\\]", "", job_title_aux))
st_j <- st_j |> mutate(job_title_aux = gsub("\\d", "", job_title_aux))
st_j <- st_j |> mutate(job_title_aux = gsub(",", "", job_title_aux),
job_title_aux = gsub("\\.", "", job_title_aux),
job_title_aux = gsub("-", "", job_title_aux),
job_title_aux = gsub("\\|", "", job_title_aux),
job_title_aux = gsub("[€£]", "", job_title_aux),
job_title_aux = str_squish(job_title_aux))
View(st_j)
st_j <- st_j |> mutate(job_title_aux = trimws(job_title_aux))
st_j <- st_j |> mutate(job_title_aux = gsub("with duty allowance", "", job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = gsub("√ó", "", job_title_aux),
job_title_aux = gsub("—contd", "", job_title_aux),
job_title_aux = gsub("contd", "", job_title_aux),
job_title_aux = gsub("\\)", "", job_title_aux),
job_title_aux = gsub("\\(", "", job_title_aux),
job_title_aux = gsub("\\[", "", job_title_aux),
job_title_aux = gsub("\\]", "", job_title_aux),
job_title_aux = gsub("x to", "", job_title_aux),
job_title_aux = gsub("¬", "", job_title_aux),
job_title_aux = gsub(":", "", job_title_aux),
job_title_aux = gsub("\\*\\*\\*$", "", job_title_aux),
job_title_aux = gsub("/$", "", job_title_aux),
job_title_aux = gsub("¬", "", job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = gsub("\\bor$", "", job_title_aux),
job_title_aux = gsub("—", "", job_title_aux),
job_title_aux = gsub("www$", "", job_title_aux),
job_title_aux = str_squish(job_title_aux),
job_title_aux = trimws(job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = str_squish(job_title_aux),
job_title_aux = trimws(job_title_aux))
gsub('co$', '', 'colateral co')
st_j <- st_j |> mutate(job_title_aux = gsub("co$", "", job_title_aux),
job_title_aux = str_squish(job_title_aux),
job_title_aux = trimws(job_title_aux))
View(st_j)
st_j <- st_j |> mutate(job_title_aux = ifelse(job_title_aux =='', NA, job_title_aux))
st_s <- st |> filter(is.na(job_title) == F & str_detect(job_title, "[€£]") == T) |>
distinct(job_title)
View(st_s)
st_s <- st_s |> mutate(ja = trimws(str_squish(job_title)))
View(st_s)
st_s <- st_s |> mutate(f_s = str_extract(ja, "(?<=£).*$"),
f_s1 = str_extract(ja, "(?<=€).*$"),
f_s = coalesce(f_s, f_s1)) |>
select(-f_s1)
View(st_s)
st_s <- st_s |> mutate(dummy_form = ifelse(str_detect(f_s, '-') |
str_detect(f_s, 'to') |
str_detect(f_s, ':') |
str_detect(f_s, '¬') |
str_detect(f_s, 'with'), 1, 0))
View(st_s)
st_s <- st_s |> mutate(f_s = str_squish(str_remove(f_s, ",")),
f_s = str_squish(str_remove(f_s, "\\.")),
f_s = str_squish(str_remove(f_s, "\\)")),
f_s = str_squish(str_remove(f_s, "\\(")),
f_s = str_squish(gsub("[[:alpha:]]", ' ', f_s)),
f_s = str_squish(gsub("-", ' ', f_s)),
f_s = str_squish(str_replace(f_s, "√", 'x')))
View(st_s)
st_s <- st |> filter(is.na(job_title) == F & str_detect(job_title, "[€£]") == T) |>
distinct(job_title)
st_s <- st_s |> mutate(ja = trimws(str_squish(job_title)))
st_s <- st_s |> mutate(f_s = str_extract(ja, "(?<=£).*$"),
f_s1 = str_extract(ja, "(?<=€).*$"),
f_s = coalesce(f_s, f_s1)) |>
select(-f_s1)
st_s <- st_s |> mutate(dummy_form = ifelse(str_detect(f_s, '-') |
str_detect(f_s, 'to') |
str_detect(f_s, ':') |
str_detect(f_s, '¬') |
str_detect(f_s, 'with'), 1, 0))
st_s <- st_s |> mutate(f_s = gsub("\\).*", "", f_s))
View(st_s)
st_s <- st_s |> mutate(f_s = gsub("\\).*", "", f_s),
f_s = gsub("\\or.*", "", f_s),
f_s = gsub("\\/.*", "", f_s),
f_s = gsub("\\x.*", "", f_s))
st_s <- st_s |> mutate(f_s = str_squish(str_remove(f_s, ",")),
f_s = str_squish(str_remove(f_s, "\\.")),
f_s = str_squish(str_remove(f_s, "\\)")),
f_s = str_squish(str_remove(f_s, "\\(")),
f_s = str_squish(gsub("[[:alpha:]]", ' ', f_s)),
f_s = str_squish(gsub("-", ' ', f_s)),
f_s = str_squish(str_replace(f_s, "√", 'x')))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 0,
as.numeric(str_squish(str_remove(f_s, ","))),
NA))
st_s <- st_s |> mutate(gsub(" ", "", f_s))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 0,
as.numeric(str_squish(str_remove(f_s, ","))),
NA))
st_s <- st_s |> mutate(f_s = gsub(" ", "", f_s))
st_s <- st |> filter(is.na(job_title) == F & str_detect(job_title, "[€£]") == T) |>
distinct(job_title)
st_s <- st_s |> mutate(ja = trimws(str_squish(job_title)))
st_s <- st_s |> mutate(f_s = str_extract(ja, "(?<=£).*$"),
f_s1 = str_extract(ja, "(?<=€).*$"),
f_s = coalesce(f_s, f_s1)) |>
select(-f_s1)
st_s <- st_s |> mutate(dummy_form = ifelse(str_detect(f_s, '-') |
str_detect(f_s, 'to') |
str_detect(f_s, ':') |
str_detect(f_s, '¬') |
str_detect(f_s, 'with'), 1, 0))
st_s <- st_s |> mutate(f_s = gsub("\\).*", "", f_s),
f_s = gsub("\\or.*", "", f_s),
f_s = gsub("\\/.*", "", f_s),
f_s = gsub("\\x.*", "", f_s))
st_s <- st_s |> mutate(f_s = str_squish(str_remove(f_s, ",")),
f_s = str_squish(str_remove(f_s, "\\.")),
f_s = str_squish(str_remove(f_s, "\\)")),
f_s = str_squish(str_remove(f_s, "\\(")),
f_s = str_squish(gsub("[[:alpha:]]", ' ', f_s)),
f_s = str_squish(gsub("-", ' ', f_s)),
f_s = str_squish(str_replace(f_s, "√", 'x')))
st_s <- st_s |> mutate(f_s = gsub(" ", "", f_s))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 0,
as.numeric(str_squish(str_remove(f_s, ","))),
NA))
st_s <- st |> filter(is.na(job_title) == F & str_detect(job_title, "[€£]") == T) |>
distinct(job_title)
st_s <- st_s |> mutate(ja = trimws(str_squish(job_title)))
st_s <- st_s |> mutate(f_s = str_extract(ja, "(?<=£).*$"),
f_s1 = str_extract(ja, "(?<=€).*$"),
f_s = coalesce(f_s, f_s1)) |>
select(-f_s1)
st_s <- st_s |> mutate(dummy_form = ifelse(str_detect(f_s, '-') |
str_detect(f_s, 'to') |
str_detect(f_s, ':') |
str_detect(f_s, '¬') |
str_detect(f_s, 'with'), 1, 0))
st_s <- st_s |> mutate(f_s = gsub("\\).*", "", f_s),
f_s = gsub("\\or.*", "", f_s),
f_s = gsub("\\/.*", "", f_s),
f_s = gsub("\\x.*", "", f_s))
st_s <- st_s |> mutate(f_s = str_squish(str_remove(f_s, ",")),
f_s = str_squish(str_remove(f_s, "\\.")),
f_s = str_squish(str_remove(f_s, "\\)")),
f_s = str_squish(str_remove(f_s, "\\(")),
f_s = str_squish(gsub("[[:alpha:]]", ' ', f_s)),
f_s = str_squish(gsub("-", ' ', f_s)),
f_s = str_squish(str_replace(f_s, "√", 'x')))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 1 & is.na(salary) == T,
as.numeric(str_squish(str_extract(f_s,
"^[^ ]+"))),
salary))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 1,
as.numeric(str_squish(str_extract(f_s,
"^[^ ]+"))),
salary))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 1,
as.numeric(str_squish(str_extract(f_s,
"^[^ ]+"))),
NA))
st_s <- st_s |> mutate(f_s = gsub(" ", "", f_s))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 0,
as.numeric(str_squish(str_remove(f_s, ","))),
NA))
st_s <- st |> filter(is.na(job_title) == F & str_detect(job_title, "[€£]") == T) |>
distinct(job_title)
st_s <- st_s |> mutate(ja = trimws(str_squish(job_title)))
st_s <- st_s |> mutate(f_s = str_extract(ja, "(?<=£).*$"),
f_s1 = str_extract(ja, "(?<=€).*$"),
f_s = coalesce(f_s, f_s1)) |>
select(-f_s1)
st_s <- st_s |> mutate(dummy_form = ifelse(str_detect(f_s, '-') |
str_detect(f_s, 'to') |
str_detect(f_s, ':') |
str_detect(f_s, '¬') |
str_detect(f_s, 'with'), 1, 0))
st_s <- st_s |> mutate(f_s = gsub("\\).*", "", f_s),
f_s = gsub("\\or.*", "", f_s),
f_s = gsub("\\/.*", "", f_s),
f_s = gsub("\\x.*", "", f_s))
st_s <- st_s |> mutate(f_s = str_squish(str_remove(f_s, ",")),
f_s = str_squish(str_remove(f_s, "\\.")),
f_s = str_squish(str_remove(f_s, "\\)")),
f_s = str_squish(str_remove(f_s, "\\(")),
f_s = str_squish(gsub("[[:alpha:]]", ' ', f_s)),
f_s = str_squish(gsub("-", ' ', f_s)),
f_s = str_squish(str_replace(f_s, "√", 'x')))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 1,
as.numeric(str_squish(str_extract(f_s,
"^[^ ]+"))),
NA))
st_s <- st_s |> mutate(f_s = gsub(" ", "", f_s))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 0,
as.numeric(str_squish(str_remove(f_s, ","))),
salary))
na_st <- st_s |> filter(is.na(salary) == T) # ONLY 2300 ARE MISSING
st_s <- st_s |> select(-c(f_s, ja))
View(st_s)
st <- st |> select(-salary) |> left_join(st_j, by = 'job_title') |>
left_join(st_s, by = 'job_title')
View(st)
st <- st |> mutate(band = coalesce(job_band, job_band_merge))
dist <- st |> distinct(band) |> filter(is.na(band) == F)
dist <- dist |> filter(str_detect(band, '£|€') == F)
View(dist)
cds <- readxl::read_excel('../../1-rawdata/Staff lists/1961/scales_docs/salary_scales_1963_1972.xlsx')
cds <- readxl::read_excel('../../1-rawdata/Staff lists/1963/scales_docs/salary_scales_1963_1972.xlsx')
View(cds)
aux <- cds |> group_by(cat, year) |> summarise(across(c(salary_basic, salary_gross_D), ~min(.x))) |>
ungroup() |> mutate(job_band = cat)
View(aux)
aux <- cds |> group_by(cat, year) |> summarise(across(c(salary_basic:salary_gross_D), ~min(.x))) |>
ungroup() |> mutate(job_band = cat)
aux2 <- cds |> group_by(cat, subcat, year) |> summarise(across(c(salary_basic:salary_gross_D), ~min(.x))) |>
ungroup() |> mutate(job_band = paste0(cat, subcat))
View(aux2)
aux_final <- bind_rows(aux, aux2)
cds <- bind_rows(aux_final, cds)
View(cds)
dist <- dist |> mutate(band_aux = gsub(")", '', band), band_aux = gsub("\\(", '', band_aux),
band_aux = gsub("-", '', band_aux),
band_aux = gsub("\\s", "", band_aux))
View(dist)
dist <- dist |> mutate(band_aux = gsub(".", '', band))
dist <- dist |> mutate(band_aux = gsub(".", '', band_aux))
dist <- st |> distinct(band) |> filter(is.na(band) == F)
dist <- dist |> filter(str_detect(band, '£|€') == F)
dist <- dist |> mutate(band_aux = gsub(")", '', band), band_aux = gsub("\\(", '', band_aux),
band_aux = gsub("-", '', band_aux),
band_aux = gsub("\\s", "", band_aux))
dist <- dist |> mutate(band_aux = gsub("\\.", '', band_aux))
dist <- dist |> mutate(band_aux = gsub("\\.|\\/", '', band_aux))
dist <- st |> distinct(band, .keep_all = T) |> select(band, job_title) |>
filter(is.na(band) == F)
dist <- dist |> filter(str_detect(band, '£|€') == F)
dist <- dist |> mutate(band_aux = gsub(")", '', band), band_aux = gsub("\\(", '', band_aux),
band_aux = gsub("-", '', band_aux),
band_aux = gsub("\\s", "", band_aux))
dist <- dist |> mutate(band_aux = gsub("\\.|\\/", '', band_aux))
View(dist)
dist <- st |> distinct(band, .keep_all = T) |> select(band, job_title) |>
filter(is.na(band) == F)
dist <- dist |> filter(str_detect(band, '£|€') == F)
dist <- dist |> mutate(band_aux = gsub("\\or.*", "", band_aux),
band_aux = gsub(")", '', band_aux),
band_aux = gsub("\\(", '', band_aux),
band_aux = gsub("-", '', band_aux),
band_aux = gsub("\\s", "", band_aux))
dist <- dist |> mutate(band_aux = gsub("\\or.*", "", band),
band_aux = gsub(")", '', band_aux),
band_aux = gsub("\\(", '', band_aux),
band_aux = gsub("-", '', band_aux),
band_aux = gsub("\\s", "", band_aux))
dist <- dist |> mutate(band_aux = gsub("\\.|\\/", '', band_aux))
writexl::write_xlsx(dist,
'../../1-rawdata/Staff lists/salary_scales/dist_1963_72.xlsx')
dist_cor <- readxl::read_excel('../../1-rawdata/Staff lists/salary_scales/dist_1963_72_corrected.xlsx')
View(dist_cor)
dist_cor <- readxl::read_excel('../../1-rawdata/Staff lists/salary_scales/dist_1963_72_corrected.xlsx') |>
rename(salary = salary_aux)
dist_cor <- readxl::read_excel('../../1-rawdata/Staff lists/salary_scales/dist_1963_72_corrected.xlsx') |>
rename(salary_aux = salary)
dist_cor <- dist_cor |> select(-c(job_title, band_aux))
View(dist_cor)
st <- st |> left_join(dist_cor, by = c('band'))
st <- st |> mutate(salary = ifelse(is.na(salary_aux) == F, salary_aux, salary))
prueba <- st |> filter(is.na(salary_aux) == F)
View(prueba)
st <- st |> mutate(salary = ifelse(is.na(salary_aux) == F, salary_aux, salary)) |>
select(-salary_aux)
View(cds)
st <- st |> left_join(cds, by = c('year', 'band_corrected' = 'job_band'))
rm(list = ls())
library(tidyverse)
library(fuzzyjoin)
library(tidyr)
## Set WD
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# We are going to build a bridge that connects the observations from
# staff list data with the salary_scale data for 1958 1958/scales_docs/salary_scales_1958_1961_final.xlsx
cds <- readxl::read_excel('../../1-rawdata/Staff lists/1963/scales_docs/salary_scales_1963_1972.xlsx')
staff <- arrow::read_parquet('../../1-rawdata/Staff lists/staff_list_cluster_123456_final.parquet')
staff <- staff |> filter(year %in% c(1963:1965, 1968, 1972))
st <- staff
st_j <- st |> filter(is.na(job_title) == F) |> distinct(job_title) |>
mutate(job_title_aux = str_squish(job_title))
# Anything inside a parentheses and square brackets:
st_j <- st_j |> mutate(job_title_aux = gsub("\\([^()]*\\)", "", job_title_aux),
job_title_aux = gsub("\\([^()]*\\)", "", job_title_aux),
job_title_aux = gsub("\\([^()]*\\)", "", job_title_aux),
job_title_aux = gsub("\\[.*?\\]", "", job_title_aux),
job_title_aux = gsub("\\[.*?\\]", "", job_title_aux),
job_title_aux = gsub("\\[.*?\\]", "", job_title_aux))
# Anything with numbers:
st_j <- st_j |> mutate(job_title_aux = gsub("\\d", "", job_title_aux))
# Commas and points
st_j <- st_j |> mutate(job_title_aux = gsub(",", "", job_title_aux),
job_title_aux = gsub("\\.", "", job_title_aux),
job_title_aux = gsub("-", "", job_title_aux),
job_title_aux = gsub("\\|", "", job_title_aux),
job_title_aux = gsub("[€£]", "", job_title_aux),
job_title_aux = str_squish(job_title_aux))
# Spaces at the end and at the beginning:
st_j <- st_j |> mutate(job_title_aux = trimws(job_title_aux))
# Now remove special detected characters:
st_j <- st_j |> mutate(job_title_aux = gsub("with duty allowance", "", job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = gsub("√ó", "", job_title_aux),
job_title_aux = gsub("—contd", "", job_title_aux),
job_title_aux = gsub("contd", "", job_title_aux),
job_title_aux = gsub("\\)", "", job_title_aux),
job_title_aux = gsub("\\(", "", job_title_aux),
job_title_aux = gsub("\\[", "", job_title_aux),
job_title_aux = gsub("\\]", "", job_title_aux),
job_title_aux = gsub("x to", "", job_title_aux),
job_title_aux = gsub("¬", "", job_title_aux),
job_title_aux = gsub(":", "", job_title_aux),
job_title_aux = gsub("\\*\\*\\*$", "", job_title_aux),
job_title_aux = gsub("/$", "", job_title_aux),
job_title_aux = gsub("¬", "", job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = gsub("\\bor$", "", job_title_aux),
job_title_aux = gsub("—", "", job_title_aux),
job_title_aux = gsub("www$", "", job_title_aux),
job_title_aux = str_squish(job_title_aux),
job_title_aux = trimws(job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = gsub("x$", "", job_title_aux),
job_title_aux = str_squish(job_title_aux),
job_title_aux = trimws(job_title_aux))
st_j <- st_j |> mutate(job_title_aux = gsub("co$", "", job_title_aux),
job_title_aux = str_squish(job_title_aux),
job_title_aux = trimws(job_title_aux))
st_j <- st_j |> mutate(job_title_aux = ifelse(job_title_aux =='', NA, job_title_aux))
## Now do the ones that already have salary in the name:
st_s <- st |> filter(is.na(job_title) == F & str_detect(job_title, "[€£]") == T) |>
distinct(job_title)
st_s <- st_s |> mutate(ja = trimws(str_squish(job_title)))
st_s <- st_s |> mutate(f_s = str_extract(ja, "(?<=£).*$"),
f_s1 = str_extract(ja, "(?<=€).*$"),
f_s = coalesce(f_s, f_s1)) |>
select(-f_s1)
st_s <- st_s |> mutate(dummy_form = ifelse(str_detect(f_s, '-') |
str_detect(f_s, 'to') |
str_detect(f_s, ':') |
str_detect(f_s, '¬') |
str_detect(f_s, 'with'), 1, 0))
st_s <- st_s |> mutate(f_s = gsub("\\).*", "", f_s),
f_s = gsub("\\or.*", "", f_s),
f_s = gsub("\\/.*", "", f_s),
f_s = gsub("\\x.*", "", f_s))
st_s <- st_s |> mutate(f_s = str_squish(str_remove(f_s, ",")),
f_s = str_squish(str_remove(f_s, "\\.")),
f_s = str_squish(str_remove(f_s, "\\)")),
f_s = str_squish(str_remove(f_s, "\\(")),
f_s = str_squish(gsub("[[:alpha:]]", ' ', f_s)),
f_s = str_squish(gsub("-", ' ', f_s)),
f_s = str_squish(str_replace(f_s, "√", 'x')))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 1,
as.numeric(str_squish(str_extract(f_s,
"^[^ ]+"))),
NA))
st_s <- st_s |> mutate(f_s = gsub(" ", "", f_s))
st_s <- st_s |> mutate(salary = ifelse(dummy_form == 0,
as.numeric(str_squish(str_remove(f_s, ","))),
salary))
st_s <- st_s |> select(-c(f_s, ja))
st <- st |> select(-salary) |> left_join(st_j, by = 'job_title') |>
left_join(st_s, by = 'job_title')
st_p <- st |> filter(is.na(salary) == F)
st <- st |> mutate(band = coalesce(job_band, job_band_merge))
g <- st |> group_by(band) |> summarise(n_case = n())
g <- g |> arrange(n_case)
dist <- st |> distinct(band, .keep_all = T) |> select(band, job_title) |>
filter(is.na(band) == F)
dist <- dist |> filter(str_detect(band, '£|€') == F)
# Modify CDS
aux <- cds |> group_by(cat, year) |> summarise(across(c(salary_basic:salary_gross_D), ~min(.x))) |>
ungroup() |> mutate(job_band = cat)
aux2 <- cds |> group_by(cat, subcat, year) |> summarise(across(c(salary_basic:salary_gross_D), ~min(.x))) |>
ungroup() |> mutate(job_band = paste0(cat, subcat))
aux_final <- bind_rows(aux, aux2)
cds <- bind_rows(aux_final, cds)
## Correct Dist:
dist <- dist |> mutate(band_aux = gsub("\\or.*", "", band),
band_aux = gsub(")", '', band_aux),
band_aux = gsub("\\(", '', band_aux),
band_aux = gsub("-", '', band_aux),
band_aux = gsub("\\s", "", band_aux))
dist <- dist |> mutate(band_aux = gsub("\\.|\\/", '', band_aux))
dist_cor <- readxl::read_excel('../../1-rawdata/Staff lists/salary_scales/dist_1963_72_corrected.xlsx') |>
rename(salary_aux = salary)
dist_cor <- dist_cor |> select(-c(job_title, band_aux))
st <- st |> left_join(dist_cor, by = c('band'))
st <- st |> mutate(salary = ifelse(is.na(salary_aux) == F, salary_aux, salary)) |>
select(-salary_aux)
st <- st |> left_join(cds |> rename(salary_aux = salary_basic),
by = c('year', 'band_corrected' = 'job_band'))
View(st)
st_fill <- st |> mutate(salary = ifelse(is.na(salary) == T, salary_aux, salary))
View(st_fill)
st_fill3 <- st_fill %>%
mutate(group = cumsum(!is.na(job_title))) %>%
group_by(group) %>%
fill(salary) %>%
ungroup() %>%
select(-group)
View(st_fill3)
nonna_rate <- 1 - sum(is.na(st_fill3$salary))/nrow(st_fill3) # .72
good <- st_fill3 |> filter(is.na(band_corrected) == F) |> group_by(job_title_aux) |>
summarise(salary2_aux = min(salary_aux)) |> filter(is.na(job_title_aux) == F) |>
select(job_title_aux, salary2_aux)
View(good)
writexl::write_xlsx(dist,
'../../1-rawdata/Staff lists/salary_scales/good_1963_72.xlsx')
writexl::write_xlsx(good,
'../../1-rawdata/Staff lists/salary_scales/good_1963_72.xlsx')
good <- st_fill3 |> filter(is.na(band_corrected) == F) |> group_by(job_title_aux) |>
summarise(salary2_aux = min(salary_aux), salary3_aux = min(salary)) |>
filter(is.na(job_title_aux) == F) |>
select(job_title_aux, salary2_aux)
good <- st_fill3 |> filter(is.na(band_corrected) == F) |> group_by(job_title_aux) |>
summarise(salary2_aux = min(salary_aux), salary3_aux = min(salary)) |>
filter(is.na(job_title_aux) == F) |>
select(job_title_aux, salary3_aux, salary2_aux)
goods <- good |> filter(is.na(salary2_aux) == F)
good <- st_fill3 |> filter(is.na(band_corrected) == F) |> group_by(job_title_aux) |>
summarise(salary2_aux = min(salary_aux), salary3_aux = min(salary)) |>
filter(is.na(job_title_aux) == F) |>
select(job_title_aux, salary2_aux)
st_fill3 <- st_fill3 |> left_join(good, by = 'job_title_aux')
st_fill3 <- st_fill3 |> mutate(salary = ifelse(is.na(salary) == T,
coalesce(salary, salary2_aux), salary))
st_fill3 <- st_fill3 %>%
mutate(group = cumsum(!is.na(job_title))) %>%
group_by(group) %>%
fill(salary) %>%
ungroup() %>%
select(-group)
nonna_rate <- 1 - sum(is.na(st_fill3$salary))/nrow(st_fill3)
arrow::write_parquet(st_fill3,
'../../1-rawdata/Staff lists/salary_scales/staff_list_63_72_w_salary.parquet')
for (li in list_cutoffs){
l <- as.numeric(li)# 3.0 Import data and manipulate
df <- get_analysis_ver_final_winsor(stage = 'stage1_2', batches = 'b1b2',
initial_path = '../../../../')
df <- df |> filter(n_posts_base>l)
print(nrow(df))
}
# 0.0 Set up the environment, clean it and set working directory to the code path
rm(list = ls())
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("C:/Users/Dell/Dropbox/Bolivia_Project/social-media-influencers-af/code/04-analysis/02-regressions/Tests")
# 1.0 Import functions and packages
library(purrr)
src_path <- c("../../../../src/utils/")
source_files <- list(
"funcs.R",
"constants_final.R",
"import_data.R"
)
map(paste0(src_path, source_files), source)
ipak(packages)
# 0.0 Set up the environment, clean it and set working directory to the code path
rm(list = ls())
rstudioapi::getActiveDocumentContext
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# 1.0 Import functions and packages
library(purrr)
src_path <- c("../../../../src/utils/")
source_files <- list(
"funcs.R",
"constants_final.R",
"import_data.R"
)
map(paste0(src_path, source_files), source)
ipak(packages)
